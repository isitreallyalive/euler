/*
Problem 12 - Highly divisible triangular number

The sequence of triangle numbers is generated by adding the natural numbers. So the 7 th  triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
1 : 1   3 : 1,3   6 : 1,2,3,6  10 : 1,2,5,10  15 : 1,3,5,15  21 : 1,3,7,21  28 : 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
*/

fn factors(number: usize) -> Vec<Vec<usize>> {
    let max = (number as f64).sqrt() as usize;
    let mut factors: Vec<Vec<usize>> = vec![vec![1, number]];
    let is_even = number % 2 == 0;

    for current_factor in (if is_even { 2 } else { 3 })..(max + 1) {
        if number % current_factor != 0 {
            continue;
        }

        factors.push(vec![current_factor, number / current_factor]);
    }

    return factors;
}

fn first_triangle_with_n_divisors(n: usize) -> usize {
    let mut i = 1;

    loop {
        let triangle = (i * (i + 1)) / 2;
        let factors = factors(triangle);

        if factors.len() * 2 > n {
            return triangle;
        }

        i += 1;
    }
}

pub fn main() {
    let value = first_triangle_with_n_divisors(500);

    println!("The first triangle number with over 500 divisors is {value}");
}
